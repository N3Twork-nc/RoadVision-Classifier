# Docker Compose file for setting up PostgreSQL with PgBouncer and Adminer

version: '3.8'  # Specify the Docker Compose version

services:
  # PostgreSQL database service
  postgredb:
    image: caothi/postgresql:latest
    container_name: postgredb
    environment:
      # Environment variables are loaded from the .env file
      POSTGRES_USER: ${POSTGRES_USER}  # Database user (from .env)
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Database password (from .env)
      POSTGRES_DB: ${POSTGRES_DB}  # Database name (from .env)
      POSTGRES_USER_DEV: ${POSTGRES_USER_DEV}  # Database user for development (from .env)
      POSTGRES_PASSWORD_DEV: ${POSTGRES_PASSWORD_DEV}  # Database password for development (from .env)
      LANG:  en_US.utf8
      POSTGRES_HOST_AUTH_METHOD: trust   # Authentication method
      POSTGRES_INITDB_ARGS: --auth=md5  # Initialize DB with MD5 auth
      ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - /var/lib/postgres-data/:/var/lib/postgresql/data   # Persist data in a local folder
      - ./init_db/:/docker-entrypoint-initdb.d/
    command: postgres -c shared_preload_libraries=pg_cron -c cron.database_name=$POSTGRES_DB

  # PgBouncer service for connection pooling
  pgbouncer:
    image: edoburu/pgbouncer
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt:ro
    depends_on:
      - postgredb

